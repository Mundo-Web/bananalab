var c=Object.defineProperty;var i=(s,a,r)=>a in s?c(s,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[a]=r;var o=(s,a,r)=>i(s,typeof a!="symbol"?a+"":a,r);import"./main-BvVILmTO.js";import{B as m}from"./ModalImportItem-edN7nyz1.js";class d extends m{constructor(){super(...arguments);o(this,"path","admin/item-presets");o(this,"hasFiles",!0);o(this,"paginate",async(r={})=>{const t=new URLSearchParams(window.location.search).get("item_id");return t&&(r={...r,item_id:t}),super.paginate(r)});o(this,"getByItem",async r=>{try{const e=await fetch(`/api/items/${r}/presets`);if(!e.ok)throw new Error("Error al obtener presets del item");return await e.json()}catch(e){throw console.error("Error en getByItem:",e.message),e}});o(this,"getPresetById",async r=>{try{const e=await fetch(`/api/presets/${r}`);if(!e.ok)throw new Error("Error al obtener el preset");return await e.json()}catch(e){throw console.error("Error en getPresetById:",e.message),e}});o(this,"saveForItem",async(r,e)=>{try{const t=await fetch(`/api/admin/items/${r}/presets`,{method:"POST",body:e,headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf_token"]').getAttribute("content")}});if(!t.ok)throw new Error("Error al guardar el preset");return await t.json()}catch(t){throw console.error("Error en saveForItem:",t.message),t}});o(this,"updateForItem",async(r,e,t)=>{try{const n=await fetch(`/api/admin/items/${r}/presets/${e}`,{method:"PUT",body:t,headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf_token"]').getAttribute("content")}});if(!n.ok)throw new Error("Error al actualizar el preset");return await n.json()}catch(n){throw console.error("Error en updateForItem:",n.message),n}});o(this,"deleteForItem",async(r,e)=>{try{const t=await fetch(`/api/admin/items/${r}/presets/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf_token"]').getAttribute("content")}});if(!t.ok)throw new Error("Error al eliminar el preset");return await t.json()}catch(t){throw console.error("Error en deleteForItem:",t.message),t}});o(this,"toggleStatusForItem",async(r,e)=>{try{const t=await fetch(`/api/admin/items/${r}/presets/${e}/toggle`,{method:"PATCH",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf_token"]').getAttribute("content")}});if(!t.ok)throw new Error("Error al cambiar el estado del preset");return await t.json()}catch(t){throw console.error("Error en toggleStatusForItem:",t.message),t}});o(this,"toggleStatus",async r=>{try{const e=await fetch(`/admin/item-presets/${r}/toggle-status`,{method:"PATCH",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf_token"]').getAttribute("content")}});if(!e.ok)throw new Error("Error al cambiar el estado del preset");return await e.json()}catch(e){throw console.error("Error en toggleStatus:",e.message),e}})}}export{d as I};
